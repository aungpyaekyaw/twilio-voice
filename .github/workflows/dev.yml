name: Deploy Twilio test dev

on:
  push:
    branches:
      - main-dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-dev
  CONTAINER_NAME: twilio-test-dev
       

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout triggered branch
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          envkey_TWILIO_CALLER_ID: ${{ secrets.TWILIO_CALLER_ID }}
          envkey_TWILIO_TWIML_APP_SID: ${{ secrets.TWILIO_TWIML_APP_SID }}
          envkey_TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
          envkey_TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
          envkey_TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Remote - clean up, pull, run
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            sudo docker kill ${{ env.CONTAINER_NAME }} || true
            sudo docker system prune -a -f
            echo "${{ secrets.PAT }}" | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-dev
            sudo docker run --restart=unless-stopped --name=${{ env.CONTAINER_NAME }} -p 3001:3001 -d ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-dev
          host: ${{ secrets.DEV_SERVER }}
          username: ${{ secrets.DEV_SERVER_USER }}
          privateKey: ${{ secrets.DEV_SERVER_PRIVATE }}
 
